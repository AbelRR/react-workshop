	"console.log": {
		"prefix": "con",
		"body": [
			"console.log($1)"
		]
	},
	"const": {
		"prefix": "const",
		"body": [
			"const { $1 } = $2"
		]
	},
	"function": {
		"prefix": "f",
		"body": [
			"function $1() {",
			"  ",
			"}"
		]
	},
	"Element": {
		"prefix": "getEl",
		"body": [
			"document.getElementById('${1}'))"
		]
	},
	"ReactDOM": {
		"prefix": "ReactDOM",
		"body": [
			"ReactDOM.render(<${1:App} />, document.getElementById('root'))"
		]
	},
	"useState": {
		"prefix": "state",
		"body": [
			"const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2)"
		]
	},
	"useEffect": {
		"prefix": "effect",
		"body": [
			"useEffect(() => {",
			"  ${2}",
			"}, [${1}])"
		]
	},
	"React.createElement": {
		"prefix": "create",
		"body": [
			"React.createElement($1, null, $2)"
		]
	},
	"reducer -> useReducer": {
		"prefix": "reducer",
		"body": [
			"const [state, dispatch] = useReducer((state, action) => {",
			"  switch(action.type) {",
			"    case '${1}': {",
			"      return { ...state }",
			"    }",
			"    default: return state",
			"  }",
			"}, {})"
		],
		"description": "reducer -> useReducer"
	},
	"dispatch": {
		"prefix": "dispatch",
		"body": [
			"dispatch({ type: '${1}' })"
		]
	},
	"React: Class Component": {
		"prefix": "class",
		"body": [
			"class $1 extends React.Component {",
      "	state = {}",
			"",
			"  render() {",
			"    return (",
			"      <div></div>",
			"    )",
			"  }",
			"}"
		]
	},
	"React: Class Component with Export": {
		"prefix": "React",
		"body": [
			"import React from 'react'",
			"",
			"class $1 extends React.Component {",
      "	 constructor(props) {",
			"    super(props)",
			"    this.state = {",
			"    }",
			"  }",
			"",
			"  render() {",
			"    return (",
			"      <div></div>",
			"    )",
			"  }",
			"}",
			"",
			"export default $1"
		]
	},
	"React: Functional Component": {
		"prefix": "react",
		"body": [
			"import React from 'react'",
			"",
			"function $1() {",
			"  return (",
			"    $2",
			"  )",
			"}",
			"",
			"export default $1"
		]
	},
	"componentDidMount": {
		"prefix": "cdm",
		"body": [
			"componentDidMount() {",
			"  $1",
			"}"
		]
	},
	"componentDidUpdate": {
		"prefix": "cdu",
		"body": [
			"componentDidUpdate(prevProps) {",
			"  $1",
			"}"
		]
	},
	"componentWillUnmount": {
		"prefix": "cwu",
		"body": [
			"componentWillUnmount() {",
			"  $1",
			"}"
		]
	},